apply plugin: 'com.android.library'

android {
    compileSdkVersion 27
    buildToolsVersion "27.0.3"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"

        externalNativeBuild {
            cmake {
                // explicitly build libs
                targets 'tiny-tools', 'uhf-tools'
                cFlags '-llog'
                cFlags '-std=c99'
            }

        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    externalNativeBuild {
        cmake {
            path 'src/main/cpp/CMakeLists.txt'
        }
    }
}

//    android.ndk {
//        moduleName = "uhf-tools"
//        ldLibs.add("log")
//        CFlags.add("-std=c99")
//        ldFlags.add('-mthumb')
//        ldFlags.each {
//            println(it)
//        }
//    }

//    android.productFlavors {
//        create("arm") {
//            ndk.abiFilters.add("armeabi")
//        }
//    }

def rootDir = property('rootDir')

apply plugin: 'maven'

artifacts {
    // TODO: здесь нужно что-то более универсальное
//    def coreAarFile = file("build/outputs/aar/${archivesBaseName}-arm-release.aar")
//    archives coreAarFile
}

uploadArchives {
    repositories {
        mavenDeployer {
            Properties properties = new Properties()
            properties.load(new FileInputStream("${rootDir}/local.properties"))

            repository(url: "file://${properties.getProperty('localRepo')}")
            pom.groupId = 'android.hardware'
            pom.artifactId = 'uhf-tools'
            pom.version = '1.0'
        }
    }
    // TODO: воткнул чтоб избавиться от сообщения "Not all execution paths return a value"
    return true
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
}
